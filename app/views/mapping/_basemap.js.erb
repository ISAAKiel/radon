var map;

function initializeMap() {

  // Define a new map.  We want it to be loaded into the 'map_canvas' div in the view
  map = new OpenLayers.Map('map');

  // Add a LayerSwitcher controller
//  map.addControl(new OpenLayers.Control.LayerSwitcher());

  // Google Maps (SATELLITE)
  var ghyb = new OpenLayers.Layer.Google(
              "Google Hybrid",{
                type: google.maps.MapTypeId.HYBRID,
                numZoomLevels: 20,
                "sphericalMercator": true,
                "maxExtent": new OpenLayers.Bounds(-20037508.34, -20037508.34, 20037508.34, 20037508.34)}
              );
  var proj = new OpenLayers.Projection("EPSG:4326");

  // Add the layers defined above to the map  
  map.addLayers([ghyb]);

  // Set some styles 
  var myStyleMap = new OpenLayers.StyleMap({
    'strokeColor': 'magenta',
    'strokeOpacity': 1.0,
    'strokeWidth': 2
  });

  // Create a new vector layer including the above StyleMap
  //   var vectorLayer = new OpenLayers.Layer.Vector(
  //     "Trip",
  //     { styleMap: myStyleMap }
  //   );
  //   map.addLayer(vectorLayer);

  // Get the polylines from Rails
//  var url = "/trips/1.json"
//  OpenLayers.loadURL(url, {}, null, function (response){
//    var geojson_format = new OpenLayers.Format.GeoJSON({
//      'internalProjection': new OpenLayers.Projection("EPSG:900913"),
//      'externalProjection': new OpenLayers.Projection("EPSG:4326")
//    });

    //Read the GeoJSON
//    var features = geojson_format.read(response.responseText,"FeatureCollection");

//    var bounds;

//    if(features) {
//      if(features.constructor != Array) {
//        features = [features];
//      }
//
//      // Iterate over the features and extend the bounds to the bounds of the geometries
//      for(var i=0; i<features.length; ++i) {
//        if (!bounds) {
//          bounds = features[i].geometry.getBounds();
//        } else {
//          bounds.extend(features[i].geometry.getBounds());
//        }
//      }
//
//      // Add features to the 'vectorLayer'
//      vectorLayer.addFeatures(features);
//
//      // Set the extent of the map to the 'bounds'
//      map.zoomToExtent(bounds);
//    }
//  });
map.zoomToMaxExtent();
}
